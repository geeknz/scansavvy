name: Build ScanSavvy

on:
  push:
    branches:
      - feature/ios
  pull_request:
    branches:
      - feature/ios

jobs:
  ios:
    name: Build for iOS
    runs-on: macos-latest

    steps:
    # - name: Setup Node.js
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: 18

    # - name: Setup Ruby
    #   uses: ruby/setup-ruby@v1
    #   with:
    #     ruby-version: 2.7

    # - name: Checkout
    #   uses: actions/checkout@v3
    #   with:
    #     fetch-depth: 0

    # - name: Install Dependencies
    #   run: |
    #     npm install &
    #     bundle install &
    #     wait

    - name: Install Apple Distribution Certificate
      run: |
        echo -n "${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE }}" | base64 --decode -o "$RUNNER_TEMP/distribution.p12"
        echo "${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}" | openssl pkcs12 -info -noout -in "$RUNNER_TEMP/distribution.p12" -passin stdin
        ls -la "$RUNNER_TEMP"
        security create-keychain -p "ABC" "$RUNNER_TEMP/app-signing.keychain-db"
        ls -la "$RUNNER_TEMP"
        security set-keychain-settings -lut 7200 "$RUNNER_TEMP/app-signing.keychain-db"
        security unlock-keychain -p "ABC" "$RUNNER_TEMP/app-signing.keychain-db"
        security import "$RUNNER_TEMP/distribution.p12" -P "${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}" -A -t cert -f pkcs12 -k "$RUNNER_TEMP/app-signing.keychain-db"
        security list-keychain -d user -s "$RUNNER_TEMP/app-signing.keychain-db"

    # - name: Build v${{ steps.git_version.outputs.fullSemVer }}
    #   run: bundle exec fastlane ios build
